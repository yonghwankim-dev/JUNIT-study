package iloveyouboss;

import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;

import iloveyouboss.Answer;
import iloveyouboss.Bool;
import iloveyouboss.BooleanQuestion;
import iloveyouboss.Criteria;
import iloveyouboss.Criterion;
import iloveyouboss.Profile;
import iloveyouboss.Question;
import iloveyouboss.Weight;

public class ProfileTest {
	private Profile profile;
	private BooleanQuestion question;
	private Criteria criteria;
	
	@Before
	public void create() {
		profile = new Profile("Bull Hockey, Inc.");
		question = new BooleanQuestion(1, "Got bonuses?");
		criteria = new Criteria();
	}
	
	@Test
	public void matchAnswersFalseWhenMustMatchCriteriaNotMet() {
//		Profile profile = new Profile("Bull Hockey, Inc.");
//		Question question = new BooleanQuestion(1, "Got bonuses?");
//		Criteria criteria = new Criteria();
		
		Answer profileAnswer = new Answer(question, Bool.FALSE);
		profile.add(profileAnswer);
		
		
		Answer criteriaAnswer = new Answer(question, Bool.TRUE);
		Criterion criterion = new Criterion(criteriaAnswer, Weight.MustMatch);
		criteria.add(criterion);
		
		boolean matches = profile.matches(criteria);
		
		assertFalse(matches);
	}

	@Test
	public void matchAnswersTrueForAnyDontCareCriteria() {
//		Profile profile = new Profile("Bull Hockey, Inc.");
//		Question question = new BooleanQuestion(1, "Got milk?");
//		Criteria criteria = new Criteria();
		
		Answer profileAnswer = new Answer(question, Bool.FALSE);
		profile.add(profileAnswer);
		
		Answer criteriaAnswer = new Answer(question, Bool.TRUE);
		Criterion criterion = new Criterion(criteriaAnswer, Weight.DontCare);
		criteria.add(criterion);
		
		boolean matches = profile.matches(criteria);
		
		assertTrue(matches);
	}
}
